#!/usr/bin/env python
from subprocess import call, Popen, PIPE, STDOUT
import onetimepass as otp
import json

def clear():
	Popen(["clear"])

def allow():
	clear()
	print 'accepted'
	# run bash/zsh
	Popen(["/bin/bash"], shell=True) # change default script if wished
	# exit with true
	exit(0)

def deny():
	clear()
	print 'denied'
	# exit with error
	exit(1)

try:
	# check what user
	whoami = Popen(["whoami"], stdout=PIPE, stderr=PIPE)
	username = whoami.stdout.read().split("\n")[0]
	# secret key
	secretdb = {"username":["secret"]} # format = "username":["secretkey"], "username1":["secret1", "secret2"]
	# check validity for each of the secrets they have
	allowed = False
	for secret in secretdb[username]:
		if otp.valid_totp(token=raw_input('~>'), secret=secret, token_length=8):
			allowed = True
	if allowed:
		allow()
	#allow if no secrets for user
	elif secretdb[username].len() == 0:
		allow()
	else:
		deny()
except KeyboardInterrupt:
	# prevent user keyboard interrupt reporting debug data.
        clear()
	deny()
except Exception,e:
	clear()
	# any exception deny
	print(e)
	deny()

# default deny
deny()
